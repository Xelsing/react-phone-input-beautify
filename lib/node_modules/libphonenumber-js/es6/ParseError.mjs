"use client";
function p(t) {
  "@babel/helpers - typeof";
  return p = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, p(t);
}
function b(t, e) {
  for (var n = 0; n < e.length; n++) {
    var r = e[n];
    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
  }
}
function O(t, e, n) {
  return e && b(t.prototype, e), n && b(t, n), Object.defineProperty(t, "prototype", { writable: !1 }), t;
}
function m(t, e) {
  if (!(t instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function w(t, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && u(t, e);
}
function d(t) {
  var e = h();
  return function() {
    var r = f(t), o;
    if (e) {
      var c = f(this).constructor;
      o = Reflect.construct(r, arguments, c);
    } else
      o = r.apply(this, arguments);
    return g(this, o);
  };
}
function g(t, e) {
  if (e && (p(e) === "object" || typeof e == "function"))
    return e;
  if (e !== void 0)
    throw new TypeError("Derived constructors may only return object or undefined");
  return _(t);
}
function _(t) {
  if (t === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return t;
}
function l(t) {
  var e = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
  return l = function(r) {
    if (r === null || !P(r))
      return r;
    if (typeof r != "function")
      throw new TypeError("Super expression must either be null or a function");
    if (typeof e < "u") {
      if (e.has(r))
        return e.get(r);
      e.set(r, o);
    }
    function o() {
      return i(r, arguments, f(this).constructor);
    }
    return o.prototype = Object.create(r.prototype, { constructor: { value: o, enumerable: !1, writable: !0, configurable: !0 } }), u(o, r);
  }, l(t);
}
function i(t, e, n) {
  return h() ? i = Reflect.construct : i = function(o, c, y) {
    var a = [null];
    a.push.apply(a, c);
    var v = Function.bind.apply(o, a), s = new v();
    return y && u(s, y.prototype), s;
  }, i.apply(null, arguments);
}
function h() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch {
    return !1;
  }
}
function P(t) {
  return Function.toString.call(t).indexOf("[native code]") !== -1;
}
function u(t, e) {
  return u = Object.setPrototypeOf || function(r, o) {
    return r.__proto__ = o, r;
  }, u(t, e);
}
function f(t) {
  return f = Object.setPrototypeOf ? Object.getPrototypeOf : function(n) {
    return n.__proto__ || Object.getPrototypeOf(n);
  }, f(t);
}
var S = /* @__PURE__ */ function(t) {
  w(n, t);
  var e = d(n);
  function n(r) {
    var o;
    return m(this, n), o = e.call(this, r), Object.setPrototypeOf(_(o), n.prototype), o.name = o.constructor.name, o;
  }
  return O(n);
}(/* @__PURE__ */ l(Error));
export {
  S as default
};
