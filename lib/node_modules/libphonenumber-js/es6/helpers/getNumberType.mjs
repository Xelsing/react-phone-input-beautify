"use client";
import a from "../metadata.mjs";
import l from "./matchesEntirely.mjs";
function I(r, n) {
  var e = typeof Symbol < "u" && r[Symbol.iterator] || r["@@iterator"];
  if (e)
    return (e = e.call(r)).next.bind(e);
  if (Array.isArray(r) || (e = c(r)) || n && r && typeof r.length == "number") {
    e && (r = e);
    var t = 0;
    return function() {
      return t >= r.length ? { done: !0 } : { done: !1, value: r[t++] };
    };
  }
  throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function c(r, n) {
  if (r) {
    if (typeof r == "string")
      return f(r, n);
    var e = Object.prototype.toString.call(r).slice(8, -1);
    if (e === "Object" && r.constructor && (e = r.constructor.name), e === "Map" || e === "Set")
      return Array.from(r);
    if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
      return f(r, n);
  }
}
function f(r, n) {
  (n == null || n > r.length) && (n = r.length);
  for (var e = 0, t = new Array(n); e < n; e++)
    t[e] = r[e];
  return t;
}
var s = ["MOBILE", "PREMIUM_RATE", "TOLL_FREE", "SHARED_COST", "VOIP", "PERSONAL_NUMBER", "PAGER", "UAN", "VOICEMAIL"];
function L(r, n, e) {
  if (n = n || {}, !(!r.country && !r.countryCallingCode)) {
    e = new a(e), e.selectNumberingPlan(r.country, r.countryCallingCode);
    var t = n.v2 ? r.nationalNumber : r.phone;
    if (l(t, e.nationalNumberPattern())) {
      if (u(t, "FIXED_LINE", e))
        return e.type("MOBILE") && e.type("MOBILE").pattern() === "" || !e.type("MOBILE") || u(t, "MOBILE", e) ? "FIXED_LINE_OR_MOBILE" : "FIXED_LINE";
      for (var E = I(s), i; !(i = E()).done; ) {
        var o = i.value;
        if (u(t, o, e))
          return o;
      }
    }
  }
}
function u(r, n, e) {
  return n = e.type(n), !n || !n.pattern() || n.possibleLengths() && n.possibleLengths().indexOf(r.length) < 0 ? !1 : l(r, n.pattern());
}
export {
  L as default,
  u as isNumberTypeEqualTo
};
