"use client";
import s from "../metadata.mjs";
import d from "./getNumberType.mjs";
function c(t, r) {
  var e = typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (e)
    return (e = e.call(t)).next.bind(e);
  if (Array.isArray(t) || (e = m(t)) || r && t && typeof t.length == "number") {
    e && (t = e);
    var a = 0;
    return function() {
      return a >= t.length ? { done: !0 } : { done: !1, value: t[a++] };
    };
  }
  throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function m(t, r) {
  if (t) {
    if (typeof t == "string")
      return o(t, r);
    var e = Object.prototype.toString.call(t).slice(8, -1);
    if (e === "Object" && t.constructor && (e = t.constructor.name), e === "Map" || e === "Set")
      return Array.from(t);
    if (e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
      return o(t, r);
  }
}
function o(t, r) {
  (r == null || r > t.length) && (r = t.length);
  for (var e = 0, a = new Array(r); e < r; e++)
    a[e] = t[e];
  return a;
}
function g(t, r) {
  var e = r.countries, a = r.defaultCountry, i = r.metadata;
  i = new s(i);
  for (var u = [], l = c(e), f; !(f = l()).done; ) {
    var n = f.value;
    if (i.country(n), i.leadingDigits()) {
      if (t && t.search(i.leadingDigits()) === 0)
        return n;
    } else if (d({
      phone: t,
      country: n
    }, void 0, i.metadata))
      if (a) {
        if (n === a)
          return n;
        u.push(n);
      } else
        return n;
  }
  if (u.length > 0)
    return u[0];
}
export {
  g as default
};
