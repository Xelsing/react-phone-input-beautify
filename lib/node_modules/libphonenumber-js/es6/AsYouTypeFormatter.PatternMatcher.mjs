"use client";
import b from "./AsYouTypeFormatter.PatternParser.mjs";
function v(e, r) {
  var t = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
  if (t)
    return (t = t.call(e)).next.bind(t);
  if (Array.isArray(e) || (t = O(e)) || r && e && typeof e.length == "number") {
    t && (e = t);
    var n = 0;
    return function() {
      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };
    };
  }
  throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function O(e, r) {
  if (e) {
    if (typeof e == "string")
      return d(e, r);
    var t = Object.prototype.toString.call(e).slice(8, -1);
    if (t === "Object" && e.constructor && (t = e.constructor.name), t === "Map" || t === "Set")
      return Array.from(e);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return d(e, r);
  }
}
function d(e, r) {
  (r == null || r > e.length) && (r = e.length);
  for (var t = 0, n = new Array(r); t < r; t++)
    n[t] = e[t];
  return n;
}
function A(e, r) {
  if (!(e instanceof r))
    throw new TypeError("Cannot call a class as a function");
}
function g(e, r) {
  for (var t = 0; t < r.length; t++) {
    var n = r[t];
    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
  }
}
function C(e, r, t) {
  return r && g(e.prototype, r), t && g(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e;
}
var S = /* @__PURE__ */ function() {
  function e(r) {
    A(this, e), this.matchTree = new b().parse(r);
  }
  return C(e, [{
    key: "match",
    value: function(t) {
      var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = n.allowOverflow;
      if (!t)
        throw new Error("String is required");
      var a = l(t.split(""), this.matchTree, !0);
      if (a && a.match && delete a.matchedChars, !(a && a.overflow && !i))
        return a;
    }
  }]), e;
}();
function l(e, r, t) {
  if (typeof r == "string") {
    var n = e.join("");
    return r.indexOf(n) === 0 ? e.length === r.length ? {
      match: !0,
      matchedChars: e
    } : {
      partialMatch: !0
      // matchedChars: characters
    } : n.indexOf(r) === 0 ? t && e.length > r.length ? {
      overflow: !0
    } : {
      match: !0,
      matchedChars: e.slice(0, r.length)
    } : void 0;
  }
  if (Array.isArray(r)) {
    for (var i = e.slice(), a = 0; a < r.length; ) {
      var y = r[a], f = l(i, y, t && a === r.length - 1);
      if (f) {
        if (f.overflow)
          return f;
        if (f.match) {
          if (i = i.slice(f.matchedChars.length), i.length === 0)
            return a === r.length - 1 ? {
              match: !0,
              matchedChars: e
            } : {
              partialMatch: !0
              // matchedChars: characters
            };
        } else {
          if (f.partialMatch)
            return {
              partialMatch: !0
              // matchedChars: characters
            };
          throw new Error(`Unsupported match result:
`.concat(JSON.stringify(f, null, 2)));
        }
      } else
        return;
      a++;
    }
    return t ? {
      overflow: !0
    } : {
      match: !0,
      matchedChars: e.slice(0, e.length - i.length)
    };
  }
  switch (r.op) {
    case "|":
      for (var o, w = v(r.args), h; !(h = w()).done; ) {
        var p = h.value, u = l(e, p, t);
        if (u) {
          if (u.overflow)
            return u;
          if (u.match)
            return {
              match: !0,
              matchedChars: u.matchedChars
            };
          if (u.partialMatch)
            o = !0;
          else
            throw new Error(`Unsupported match result:
`.concat(JSON.stringify(u, null, 2)));
        }
      }
      return o ? {
        partialMatch: !0
        // matchedChars: ...
      } : void 0;
    case "[]":
      for (var s = v(r.args), m; !(m = s()).done; ) {
        var c = m.value;
        if (e[0] === c)
          return e.length === 1 ? {
            match: !0,
            matchedChars: e
          } : t ? {
            overflow: !0
          } : {
            match: !0,
            matchedChars: [c]
          };
      }
      return;
    default:
      throw new Error("Unsupported instruction tree: ".concat(r));
  }
}
export {
  S as default
};
